<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Lithium Airdrops Calculator</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Share+Tech&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
    <style>
        * {
            font-family: "Share Tech", sans-serif;
        }

        body {
            background-color: rgb(16, 6, 48);
            background-image: url(https://lithium.ventures/static/background-values-737509f7086dde47dcc38fe6026ed363.png);
            background-attachment: fixed;
            background-size: cover;
            color: white;
        }

        h1 {
            font-weight: bold;
            font-size: 50px;
        }

        h1:after {
            content: "_";
            animation: 0.6s ease 0s infinite normal none running pulse;
        }

        h2 {
            font-size: 20px;
            text-transform: uppercase;
        }

        .list {
            margin-top: 50px;
        }

        .tile {
            border: solid 1px;
            border-radius: 5px;
            padding: 5px;
            margin-bottom: 15px;
        }

        .tile-strategist {
            border-color: #CF40E1;
        }

        .tile-evangelist {
            border-color: #48ACE5;
        }

        .list-item p {
            margin-bottom: 5px;
        }

        .tile span {
            text-transform: uppercase;
            color: rgb(255, 252, 252);
            line-height: 18px;
            font-size: 16px;
            opacity: 0.6;
        }

        .tile-header {
            display: flex;
            flex-direction: row;
        }

        .tile-header > div {
            flex: 1;
        }

        .badge-strategist {
            background-color: #CF40E1;
        }

        .badge-evangelist {
            background-color: #48ACE5;
        }

        .footer {
            margin: 30px 0;
            color: rgb(255, 252, 252);
            line-height: 18px;
            font-size: 16px;
            opacity: 0.6;
        }

        .tab-bar {
            display: flex;
            flex-direction: row;
        }

        .tab-bar .tab { 
            flex: 1;
            position: relative;
        }

        .tab-bar .tab:first-child {
            margin-right: 2px;
        }

        .tab-bar .tab:last-child {
            margin-left: 2px;
        }

        .lithium-button{ 
            width: 100%;
            border: none;
            height: 58px;
            background-color: transparent;
            position: relative;
            padding: 0px 40px;
            text-transform: uppercase;
            font-size: 16px;
            font-family: "Share Tech", sans-serif;
            color: rgb(255, 252, 252);
            min-width: 200px;
            cursor: pointer;
        }


        .lithium-button.active{ 
            color: rgb(41, 41, 41);
        }

        .lithium-button:before{
            position: absolute;
            top: 0px;
            left: 0px;
            z-index: -1;
            content: "";
            width: 100%;
            height: 100%;
            background-color: rgb(29, 233, 192);
            clip-path: polygon(0% 0%, calc(100% - 15px) 0%, 100% 15px, 100% 100%, 15px 100%, 0px calc(100% - 15px), 0px 2px, 2px 2px, 2px calc(100% - 16px), 16px calc(100% - 2px), calc(100% - 2px) calc(100% - 2px), calc(100% - 2px) 16px, calc(100% - 16px) 2px, 0px 2px, 0px 0px);
        }

        .lithium-button.active:before{
            clip-path: polygon(0% 0%, calc(100% - 15px) 0%, 100% 15px, 100% 100%, 15px 100%, 0px calc(100% - 15px), 0px 0px);
        }

        @keyframes pulse{0%{opacity:0;}50%{opacity:100;}100%{opacity:0;}}
    </style>
</head>
<body>
    <div id="app">
        <div class="container mt-3">
            <div class="col-md-6 offset-md-3">
                <h1>
                    Lithium Airdrops Calculator
                </h1>
                <p>
                    <span>$EBSC eligible:</span> {{ tokensEligible }}
                </p>
    
                <div class="mt-3">
                    <h2>
                        Project settings:
                    </h2>
                    <div class="form-group">
                        <label for="">Market Cap ($):</label>
                        <input class="form-control" type="text" inputmode="numeric" pattern="[0-9]*" v-model="project.mc">
                    </div>
                    <div class="form-group">
                        <label for="">Project supply:</label>
                        <input class="form-control" type="text" inputmode="numeric" pattern="[0-9]*" v-model="project.tokenQuantity">
                    </div>
                    <div class="form-group">
                        <label for="">Airdrop %:</label>
                        <input class="form-control" type="text" inputmode="numeric" pattern="[0-9]*" v-model="project.airdropPerc">
                    </div>
                    <div class="form-group">
                        <button type="button" class="lithium-button active" @click="search">Calculate</button>
                    </div>
                </div> 
                
                <div class="list" v-if="isSearching">
                    <div class="tab-bar">
                        <div class="tab">
                            <button class="lithium-button" v-bind:class="{ 'active': tabState == 'wallets'}" type="button" @click="tabState = 'wallets'">Wallets</button>
                        </div>
                        <div class="tab">
                            <button class="lithium-button" v-bind:class="{ 'active': tabState == 'projection'}" type="button" @click="tabState = 'projection'">Projection</button>
                        </div>
                    </div>
                    <div v-if="tabState == 'wallets'">
                        <div class="mt-3">
                            <div class="form-group">
                                <label for="">Filter wallets:</label>
                                <input class="form-control" type="text" v-model="searchAddress">
                            </div>
                        </div>
                        <template v-for="wallet in payload.wallets">
                            <div class="list-item" v-if="!searchAddress || wallet.address.includes(searchAddress)">
                                <p>
                                    <span v-if="wallet.tier == 'strategist'" class="badge badge-strategist">Strategist</span>
                                    <span v-else class="badge badge-evangelist">Evangelist</span>
                                    {{wallet.address}}
                                </p>
                                <div class="tile" v-bind:class="{ 'tile-strategist': wallet.tier == 'strategist', 'tile-evangelist': wallet.tier == 'evangelist' }">
                                    <div class="tile-header">
                                        <div>
                                            <span>Amount of $EBSC</span>
                                            <div>{{wallet.amount}}</div>
                                        </div>
                                        <div>
                                            <span>Percentage:</span>
                                            <div>{{ ((wallet.amount / tokensEligible) * 100).toFixed(2) }}%</div>
                                        </div>
                                    </div>
                                    <span>Airdrop:</span>
                                    <div class="highlight">
                                        {{ ((wallet.amount / tokensEligible) * project.airdropTokens).toFixed(2) }} Tokens
                                        <span>${{ ((wallet.amount / tokensEligible) * project.airdropTokens * project.price).toFixed(2) }}</span>
                                    </div>
                                </div>
                            </div>
                        </template>
                    </div>
                    <div v-if="tabState == 'projection'">
                        <div class="projections-container mt-3">
                            <div class="form-group">
                                <label for="">$EBSC eligible amount:</label>
                                <input class="form-control" type="text" inputmode="numeric" pattern="[0-9]*" v-model="projection.eligible">
                            </div>
                            <div class="form-group">
                                <label for="">Wallet estimated amount:</label>
                                <input class="form-control" type="text" inputmode="numeric" pattern="[0-9]*" v-model="projection.amount">
                            </div>

                            <div v-if="projection.amount >= 2500000 && projection.eligible > 0">
                                <div class="list-item">
                                    <p>
                                        <span v-if="projection.amount < 7000000" class="badge badge-strategist">Strategist</span>
                                        <span v-else class="badge badge-evangelist">Evangelist</span>
                                        Simulation
                                    </p>
                                    <div class="tile" v-bind:class="{ 'tile-strategist': projection.amount < 7000000, 'tile-evangelist': projection.amount >= 7000000 }">
                                        <div class="tile-header">
                                            <div>
                                                <span>Amount of $EBSC</span>
                                                <div>{{projection.amount}}</div>
                                            </div>
                                            <div>
                                                <span>Percentage:</span>
                                                <div>{{ ((projection.amount / projection.eligible) * 100).toFixed(2) }}%</div>
                                            </div>
                                        </div>
                                        <span>Airdrop:</span>
                                        <div class="highlight">
                                            {{ ((projection.amount / projection.eligible) * project.airdropTokens).toFixed(2) }} Tokens
                                            <span>${{ ((projection.amount / projection.eligible) * project.airdropTokens * project.price).toFixed(2) }}</span>
                                        </div>
                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>

                <div class="footer">
                    <p>This is an open source project created by <a target="_blank" href="https://github.com/natereisbr">@natereisbr</a>. Feel free to buy me a beer in <strong>0xc754644B61C7EE8FF63A544E3ad008a36cf80953</strong> <span style="color: red;">&hearts;</span></p>
                </div>
            </div>
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/vue@2"></script>
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
    <script>
        const app = new Vue({
            el: '#app',
            data: {
                tabState: 'wallets',
                project: {
                    mc: 10000000,
                    tokenQuantity: 5000000,
                    price: 0,
                    airdropPerc: 1,
                    airdropTokens: 0,
                    airdrop: {
                        strategist: 0,
                        evangelist: 0,
                    },
                    airdropPercentage: {
                        strategist: 0.01,
                        evangelist: 0.01,
                    }
                },
                projection: {
                    eligible: 0,
                    amount: 2500000
                },
                isSearching: false,
                searchAddress: '',
                payload: JSON.parse('<%- payload %>')
            },

            computed: {
                tokensEligible() {
                    return this.payload.tiers['evangelist'].total + this.payload.tiers['strategist'].total
                }
            },

            methods: {
                search() {
                    this.isSearching = false
                    if (this.project.mc && this.project.mc != 0 && this.project.tokenQuantity && this.project.tokenQuantity != 0 && this.project.airdropPerc > 0 && this.project.airdropPerc <= 100) {
                        this.project.airdropTokens = (this.project.airdropPerc / 100) * this.project.tokenQuantity
                        this.project.price = this.project.mc / this.project.tokenQuantity
                        this.projection.eligible = this.tokensEligible;
                        this.isSearching = true
                    }
                }
            }
        })
    </script>
    
</body>
</html>